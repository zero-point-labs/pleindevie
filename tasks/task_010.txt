# Task ID: 10
# Title: Develop Trust Builder Elements
# Status: pending
# Dependencies: 1
# Priority: medium
# Description: Create elements that provide final reassurance through certifications, statistics, and guarantee displays to address last-minute hesitations and reinforce credibility.
# Details:
1. Create AnimatedList component for certification badges
2. Implement NumberTicker for customer counts and statistics
3. Add guarantee displays and trust symbols
4. Create responsive layout for all viewport sizes
5. Add subtle animations and hover effects
6. Include industry certifications and awards
7. Add customer satisfaction metrics

Example implementation:
```tsx
import { motion } from 'framer-motion';
import { useInView } from 'framer-motion';
import { useRef, useState, useEffect } from 'react';
import Image from 'next/image';

interface TrustStatProps {
  value: number;
  label: string;
  prefix?: string;
  suffix?: string;
}

interface CertificationProps {
  image: string;
  name: string;
  description?: string;
}

const NumberTicker = ({ value, prefix = '', suffix = '' }: TrustStatProps) => {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: '-100px' });
  const [displayValue, setDisplayValue] = useState(0);
  
  useEffect(() => {
    if (isInView) {
      let startValue = 0;
      const duration = 2000; // 2 seconds
      const increment = value / (duration / 16); // 60fps
      
      const timer = setInterval(() => {
        startValue += increment;
        if (startValue >= value) {
          setDisplayValue(value);
          clearInterval(timer);
        } else {
          setDisplayValue(Math.floor(startValue));
        }
      }, 16);
      
      return () => clearInterval(timer);
    }
  }, [isInView, value]);
  
  return (
    <div ref={ref} className="text-center">
      <div className="text-3xl md:text-4xl font-bold text-white mb-1">
        {prefix}{displayValue.toLocaleString()}{suffix}
      </div>
      <div className="text-sm text-slate-400">{label}</div>
    </div>
  );
};

const CertificationBadge = ({ image, name, description }: CertificationProps) => {
  return (
    <motion.div 
      className="flex items-center p-4 bg-slate-800/50 rounded-lg border border-slate-700/50"
      whileHover={{ y: -5 }}
      transition={{ duration: 0.3 }}
    >
      <div className="w-16 h-16 relative mr-4 flex-shrink-0">
        <Image 
          src={image} 
          alt={name} 
          fill 
          className="object-contain"
        />
      </div>
      <div>
        <h4 className="font-bold text-white">{name}</h4>
        {description && <p className="text-sm text-slate-400">{description}</p>}
      </div>
    </motion.div>
  );
};

const GuaranteeDisplay = ({ title, description, icon }) => {
  return (
    <div className="text-center p-6 bg-slate-800/30 rounded-lg border border-gold/20">
      <div className="w-16 h-16 mx-auto mb-4 flex items-center justify-center bg-gold/10 rounded-full">
        <img src={icon} alt="" className="w-8 h-8" />
      </div>
      <h3 className="text-xl font-bold text-white mb-2">{title}</h3>
      <p className="text-slate-400">{description}</p>
    </div>
  );
};

const TrustBuilderSection = () => {
  const stats: TrustStatProps[] = [
    { value: 500, label: 'Completed Projects', prefix: '+' },
    { value: 98, label: 'Customer Satisfaction', suffix: '%' },
    { value: 15, label: 'Years of Excellence' },
    { value: 42, label: 'Design Awards Won' }
  ];
  
  const certifications: CertificationProps[] = [
    { 
      image: '/certifications/nari.png', 
      name: 'NARI Certified Remodeler', 
      description: 'National Association of the Remodeling Industry'
    },
    { 
      image: '/certifications/nkba.png', 
      name: 'NKBA Member', 
      description: 'National Kitchen & Bath Association'
    },
    { 
      image: '/certifications/bbb.png', 
      name: 'BBB A+ Rating', 
      description: 'Better Business Bureau Accredited Business'
    },
    { 
      image: '/certifications/houzz.png', 
      name: 'Best of Houzz', 
      description: 'Service & Design Excellence'
    }
  ];
  
  const guarantees = [
    {
      title: '5-Year Warranty',
      description: 'Our industry-leading warranty covers all workmanship for a full 5 years.',
      icon: '/icons/warranty.svg'
    },
    {
      title: 'On-Time Guarantee',
      description: 'We'll complete your project on schedule or pay you $100 for each day we're late.',
      icon: '/icons/clock.svg'
    },
    {
      title: 'Clean Job Site Promise',
      description: 'We leave your home cleaner than we found it, guaranteed.',
      icon: '/icons/clean.svg'
    }
  ];
  
  return (
    <div className="container mx-auto px-4 py-16">
      <motion.div 
        className="text-center max-w-2xl mx-auto mb-12"
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        viewport={{ once: true }}
      >
        <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">Why Homeowners Trust Us</h2>
        <p className="text-slate-300">Join hundreds of satisfied homeowners who've experienced our premium renovation services and exceptional results.</p>
      </motion.div>
      
      <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-12">
        {stats.map((stat, index) => (
          <motion.div 
            key={index}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5, delay: index * 0.1 }}
            viewport={{ once: true }}
          >
            <NumberTicker 
              value={stat.value} 
              label={stat.label} 
              prefix={stat.prefix} 
              suffix={stat.suffix} 
            />
          </motion.div>
        ))}
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-12">
        {certifications.map((cert, index) => (
          <motion.div 
            key={index}
            initial={{ opacity: 0, x: index % 2 === 0 ? -20 : 20 }}
            whileInView={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.5, delay: index * 0.1 }}
            viewport={{ once: true }}
          >
            <CertificationBadge 
              image={cert.image} 
              name={cert.name} 
              description={cert.description} 
            />
          </motion.div>
        ))}
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {guarantees.map((guarantee, index) => (
          <motion.div 
            key={index}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5, delay: index * 0.1 }}
            viewport={{ once: true }}
          >
            <GuaranteeDisplay 
              title={guarantee.title} 
              description={guarantee.description} 
              icon={guarantee.icon} 
            />
          </motion.div>
        ))}
      </div>
    </div>
  );
};
```

# Test Strategy:
1. Test NumberTicker animation for statistics
2. Verify responsive layout on various screen sizes
3. Test animations and hover effects
4. Validate that certification badges display correctly
5. Test accessibility of all elements
6. Verify that guarantee displays are clear and compelling
7. Test performance with all animations enabled
8. Validate that trust elements effectively communicate credibility

# Subtasks:
## 1. Create the NumberTicker Component for Customer Statistics [pending]
### Dependencies: None
### Description: Develop a reusable NumberTicker component that animates numerical values for displaying customer statistics.
### Details:
Implement a smooth animation effect for counting up to the target number. Include configurable parameters for animation duration, formatting options (commas, decimals), and prefix/suffix text. Ensure the component is accessible and works across different browsers. Add proper documentation for component usage.

## 2. Build the Certification Badges Display [pending]
### Dependencies: None
### Description: Create a responsive layout for displaying certification badges with hover effects.
### Details:
Design a grid or flex layout that properly arranges certification badges. Implement hover effects that provide additional information about each certification. Ensure badges maintain proper aspect ratios and scale appropriately on different screen sizes. Include fallback displays for when images fail to load.

## 3. Implement Guarantee Displays with Icons [pending]
### Dependencies: None
### Description: Create responsive guarantee displays with appropriate icons and text content.
### Details:
Select or create appropriate icons for different types of guarantees (money-back, satisfaction, etc.). Implement a responsive layout that adjusts icon and text size based on screen dimensions. Ensure proper spacing and alignment between icon and text elements. Add subtle visual effects to draw attention to these trust elements without overwhelming the page.

