# Task ID: 5
# Title: Implement Interactive Services Showcase
# Status: pending
# Dependencies: 1
# Priority: medium
# Description: Create an interactive service offerings display with 3D hover effects, detailed feature lists, and project imagery to educate visitors about service range.
# Details:
1. Create Service component using Aceternity FeatureCard
2. Implement hover animations and 3D effects
3. Add Magic UI dot patterns for background visual interest
4. Create responsive grid layout for service cards
5. Implement feature list display for each service
6. Add pricing range and badge indicators
7. Include high-quality service imagery
8. Create data structure for services based on the provided data model

Example implementation:
```tsx
import { motion } from 'framer-motion';
import Image from 'next/image';
import { useState } from 'react';

interface ServiceProps {
  service: Service;
}

const ServiceCard = ({ service }: ServiceProps) => {
  const [isHovered, setIsHovered] = useState(false);
  
  return (
    <motion.div
      className="relative h-[400px] rounded-xl overflow-hidden group cursor-pointer"
      onHoverStart={() => setIsHovered(true)}
      onHoverEnd={() => setIsHovered(false)}
      whileHover={{ y: -5 }}
    >
      <div className="absolute inset-0 bg-gradient-to-b from-transparent to-slate-900/90 z-10" />
      
      <Image 
        src={service.image} 
        alt={service.title} 
        fill 
        className="object-cover transition-transform duration-500 group-hover:scale-110"
      />
      
      {service.badge && (
        <div className="absolute top-4 right-4 bg-gold text-slate-900 text-xs font-bold px-3 py-1 rounded-full z-20">
          {service.badge}
        </div>
      )}
      
      <div className="absolute bottom-0 left-0 right-0 p-6 z-20">
        <div className="flex items-center mb-3">
          <div className="w-10 h-10 flex items-center justify-center bg-gold/20 rounded-full mr-3">
            <Image src={service.icon} alt="" width={24} height={24} />
          </div>
          <h3 className="text-xl font-bold text-white">{service.title}</h3>
        </div>
        
        <p className="text-slate-300 mb-4 line-clamp-2 group-hover:line-clamp-none transition-all duration-300">
          {service.description}
        </p>
        
        <motion.div 
          className="space-y-2"
          initial={{ height: 0, opacity: 0 }}
          animate={{ 
            height: isHovered ? 'auto' : 0,
            opacity: isHovered ? 1 : 0
          }}
          transition={{ duration: 0.3 }}
        >
          <ul className="space-y-1">
            {service.features.map((feature, index) => (
              <li key={index} className="flex items-start text-sm text-slate-300">
                <svg className="w-4 h-4 text-gold mr-2 mt-0.5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M5 13L9 17L19 7" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                </svg>
                {feature}
              </li>
            ))}
          </ul>
          
          <div className="pt-2 text-sm font-medium text-gold">
            {service.price_range}
          </div>
        </motion.div>
      </div>
    </motion.div>
  );
};

const ServicesShowcase = ({ services }: { services: Service[] }) => {
  return (
    <div className="relative">
      {/* Background dot pattern */}
      <div className="absolute inset-0 -z-10 opacity-20">
        <svg width="100%" height="100%">
          <pattern id="dots" width="20" height="20" patternUnits="userSpaceOnUse">
            <circle cx="10" cy="10" r="1" fill="#D4AF37" />
          </pattern>
          <rect width="100%" height="100%" fill="url(#dots)" />
        </svg>
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {services.map((service) => (
          <ServiceCard key={service.id} service={service} />
        ))}
      </div>
    </div>
  );
};
```

# Test Strategy:
1. Test hover animations and 3D effects across different browsers
2. Verify responsive grid layout on various screen sizes
3. Test that all service information is correctly displayed
4. Validate image loading and optimization
5. Test accessibility of interactive elements
6. Verify that feature lists expand and collapse correctly
7. Test performance with multiple service cards
8. Validate that background patterns render correctly

# Subtasks:
## 1. Create service card component with 3D effects [pending]
### Dependencies: None
### Description: Develop a reusable service card component featuring hover animations and 3D effects
### Details:
Implement a card component with subtle 3D perspective transformation on hover. Include smooth transitions for depth changes, shadow adjustments, and content scaling. Ensure cross-browser compatibility for all 3D effects and verify performance on lower-end devices. Add subtle background gradient shifts during interaction.

## 2. Implement responsive grid layout [pending]
### Dependencies: 5.1
### Description: Create a responsive grid system for displaying service cards with proper spacing and alignment
### Details:
Design a grid layout that adapts from 3-4 columns on desktop to 2 columns on tablet and 1 column on mobile. Implement consistent spacing between cards that adjusts proportionally to screen size. Ensure visual hierarchy is maintained across breakpoints and test alignment on various screen dimensions. Use CSS Grid or Flexbox with appropriate gap properties.

## 3. Build feature list with animated reveals [pending]
### Dependencies: 5.1, 5.2
### Description: Develop the feature list display with animated reveal effects and badge indicators
### Details:
Create staggered animation sequences for feature items that trigger on scroll or card interaction. Implement badge indicators with appropriate styling for different feature categories. Ensure animations are subtle and don't interfere with readability. Add ARIA attributes for accessibility and include reduced-motion options for users with vestibular disorders.

